name: Claude Code AI Assistant

on:
  issues:
    types: [opened, edited, labeled]
  issue_comment:
    types: [created, edited]
  pull_request:
    types: [opened, edited, synchronize, reopened]
  pull_request_review_comment:
    types: [created, edited]
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue number to process'
        required: false
        type: string
      pr_number:
        description: 'Pull request number to process'
        required: false
        type: string

jobs:
  claude-code:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install Claude Code CLI
      run: |
        pip install claude-code
        
    - name: Configure Claude Code
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        ANTHROPIC_BASE_URL: ${{ secrets.ANTHROPIC_BASE_URL }}
      run: |
        echo "Configuring Claude Code with custom API endpoint..."
        claude config set api_key "$ANTHROPIC_API_KEY"
        claude config set base_url "$ANTHROPIC_BASE_URL"
        
    - name: Run Claude Code Assistant
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        ANTHROPIC_BASE_URL: ${{ secrets.ANTHROPIC_BASE_URL }}
      run: |
        if [ "${{ github.event_name }}" = "issues" ]; then
          echo "Processing issue #${{ github.event.issue.number }}"
          claude --github-issue ${{ github.event.issue.number }}
        elif [ "${{ github.event_name }}" = "issue_comment" ]; then
          echo "Processing issue comment on #${{ github.event.issue.number }}"
          claude --github-issue ${{ github.event.issue.number }}
        elif [ "${{ github.event_name }}" = "pull_request" ]; then
          echo "Processing pull request #${{ github.event.pull_request.number }}"
          claude --github-pr ${{ github.event.pull_request.number }}
        elif [ "${{ github.event_name }}" = "pull_request_review_comment" ]; then
          echo "Processing PR review comment on #${{ github.event.pull_request.number }}"
          claude --github-pr ${{ github.event.pull_request.number }}
        elif [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          if [ -n "${{ github.event.inputs.issue_number }}" ]; then
            echo "Manually processing issue #${{ github.event.inputs.issue_number }}"
            claude --github-issue ${{ github.event.inputs.issue_number }}
          elif [ -n "${{ github.event.inputs.pr_number }}" ]; then
            echo "Manually processing PR #${{ github.event.inputs.pr_number }}"
            claude --github-pr ${{ github.event.inputs.pr_number }}
          else
            echo "Running general Claude Code assistant"
            claude --help
          fi
        fi